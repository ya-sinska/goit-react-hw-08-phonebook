{"version":3,"file":"static/js/ContactsPage.1da672e2.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/Contacts/Contacts.styled.js","components/ContactItem/ContactItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","hooks/useModalFormControl.js","components/ContactItem/ContactItem.jsx","hooks/useModalState.js","components/Contacts/Contacts.jsx","hooks/useContacts.js","components/Filter/Filter.jsx","hooks/useChangeFilter.js","pages/ConpactsPage/ContactsPage.styled.js","pages/ConpactsPage/ContactsPage.jsx","hooks/useAddContactForm.js","utils/notification.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nexport const PaperForm = styled(Paper)`\n   max-width:500px;\n   padding: 30px 20px;\n   text-align: center;\n   background-color: #d6e4ee;\n   max-height:250px;\n\n`\nexport const InputField = styled.input`\n    &:not(:last-child){\n    margin-bottom:10px;\n   }\n    width: 300px; \n    padding: 10px; \n    box-shadow: inset 0 1px 5px rgba(0,0,0,0.2); \n    border: 1px solid #ccc; \n    color: black; \n    font-size:16px;\n    padding-left: 30px; \n   `\n   export const Label = styled.label`\n    width: 100px; \n    text-align: right; \n    float: left; \n    margin-right: 10px; \n    line-height: 30px; \n    color: hsl(210deg 8% 20%);\n    font-weight:900;\n   `\n\nexport const Error = styled.p`\n   margin:0;\n   color: tomato;\n   font-size:16px;\n   text-align: center; \n   `\nexport const BtnSubmitForm = styled(Button)`\nmargin-top:30px;\n`\n","import PropTypes from 'prop-types';\nimport { PaperForm, InputField, Label, Error, BtnSubmitForm } from './Form.styled'\n// Patterns\nconst phoneRegExp = /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/;\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\n// Component Forma\nexport const Forma = ({ btnText, register, handleSubmit, errors, onSubmit, contact, isLoading}) => {\n\n    return (\n        <PaperForm>\n            <form\n            onSubmit={handleSubmit(onSubmit)}\n            autoComplete='off'\n            >\n            <Label htmlFor='name'> Name </Label>             \n            <InputField\n                id=\"name\"\n                type=\"text\"\n                defaultValue={contact?(contact.name):''}\n                {...register(\"name\", {\n                    required: \"This is required\",\n                    minLength: {\n                        value: 3,\n                        message: \"Min length is 3 symbols\",\n                    },\n                    pattern: {\n                        value: nameRegExp,\n                        message: \"Use only text\"\n                    }\n                })} \n                placeholder=\"Surname Name\"\n            />\n            {errors.name&&<Error>{errors.name?.message }</Error> } \n            <Label  htmlFor='number'> Number </Label >              \n            <InputField\n                id=\"number\"\n                type=\"tel\"\n                defaultValue={contact ? (contact.number) : ''}\n                {...register(\"number\", {\n                    required: \"This is required\",\n                    minLength: {\n                        value: 5,\n                        message: \"Min length is 5 symbols\",\n                    },\n                    maxLength: {\n                        value: 20,\n                        message: \"Max length is 20 symbols\"\n                    },\n                    pattern: {\n                        value: phoneRegExp,\n                        message: \"Use phone number\"\n                    }\n                })}\n                placeholder=\"+38(000)000-00-00\"\n            />\n            {errors.number&&<Error>{errors.number?.message }</Error>  }     \n            <BtnSubmitForm disabled={isLoading} variant=\"contained\" type=\"submit\">{btnText}</BtnSubmitForm>      \n            </form>\n        </PaperForm>\n    )\n}\nForma.propTypes = {\n    btnText: PropTypes.string.isRequired,\n    register: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    errors:PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    contact: PropTypes.object,\n    isLoading:PropTypes.bool.isRequired,\n}","import styled from \"@emotion/styled\";\nimport Paper from '@mui/material/Paper';\nexport const PaperBoxContacts = styled(Paper)`\nmargin-bottom:30px;\nmax-width:500px;\ntext-align:center;\npadding:15px 10px;\nbackground-color: #d6e4ee;\n`\nexport const SecondTitle = styled.h2`\ncolor: hsl(210deg 8% 20%);\nmargin: 0 0 15px 0;\n`","import styled from \"@emotion/styled\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Button from '@mui/material/Button';\nimport ListItem from '@mui/material/ListItem';\nimport Avatar from '@mui/material/Avatar';\nimport ListItemText from '@mui/material/ListItemText';\nexport const Item = styled(ListItem)`\n&:not(:last-child){\n    margin-bottom:10px;\n}\n&:hover{\n    background-color: #f0efed;\n}\nmin-width:370px;\n`\nexport const AvatarIcon = styled(Avatar)`\nmargin-right:10px;\n`\nexport const Name = styled(ListItemText)`\ntext-transform: capitalize;\n`\nexport const Delete = styled(DeleteIcon)`\nmargin-right: -10px; \nmargin-left: 4px;\n`\nexport const Edit = styled(EditIcon)`\nmargin-right: -10px; \nmargin-left: 4px;\n`\nexport const BtnDelete = styled(Button)`\nmin-width:40px;\nmargin-right:5px;\n`\nexport const BtnEdit = styled(Button)`\nmin-width:40px;\n`","import styled from \"@emotion/styled\";\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`\nexport const ModalBox = styled.div`\nposition:relative; \n  max-width: calc(100vw - 300px);\n  max-height: calc(100vh - 50px);\n  background-color: white;\n`\nexport const ModalImage = styled.img`\nwidth:100%;\nheight: calc(100vh - 50px);\n`\nexport const CloseBtn = styled.button`\nposition: absolute;\ntop:5px;\nright: 5px;\nborder: none;\nborder-radius: 50%;\nbackground-color: #1976d2;\ncolor: white;\ndisplay:flex;\nalign-items:center;\npadding:3px;\n&:hover{\n  background-color: #1565c0;\n}\n`","import { useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { Overlay, ModalBox, CloseBtn } from \"./Modal.styled\"\nimport { createPortal } from 'react-dom';\nimport { Forma } from 'components/Form/Form';\nimport { useModalFormControl } from 'hooks/useModalFormControl';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, id}) => {\n const {register, handleSubmit, errors, onSubmit, contact, isLoading}= useModalFormControl( onClose, id)\n  useEffect(() => {\n   const handleKeyDown = e => {\n     if (e.code === 'Escape') {\n    onClose();\n    }};\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {window.removeEventListener('keydown', handleKeyDown)} ;\n  },[onClose])\n\n const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n };\n  return createPortal(      \n      (<Overlay  onClick={handleBackdropClick}>\n          <ModalBox >         \n            <Forma btnText='Save chahges' register={register} handleSubmit={handleSubmit} errors={errors} contact={contact} isLoading={isLoading} onSubmit={onSubmit} />\n            <CloseBtn type='button' onClick={()=>onClose()}><CloseIcon/></CloseBtn>\n          </ModalBox>\n        </Overlay>), modalRoot )\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  id: PropTypes.string,\n}","import { useGetContactsQuery, useUpdateContactMutation} from \"redux/contactsItemSlice\";\nimport { sucsessEdit, errorEdit } from \"utils/notification\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect } from 'react';\n\n\nexport const useModalFormControl = (onClose, id) => {\n  const { data: contacts } = useGetContactsQuery();\n  const contact = contacts.find(cont => cont.id === id);\n  const [updateContact, { isLoading, isSuccess, isError }] = useUpdateContactMutation();\n  useEffect(() => {\n        isSuccess && sucsessEdit();\n        isError && errorEdit();\n    }, [isError, isSuccess]);\n    const onSubmit = async fields => {\n    try {\n      await updateContact({id:contact.id, ...fields});\n      onClose();\n    } catch (error) {\n      console.log(error);\n    }\n    };\n  const { register, handleSubmit, formState: { errors } } = useForm({});\n  return {register, handleSubmit, errors, onSubmit, contact, isLoading}\n}","import { Item, BtnDelete,BtnEdit, Delete, Edit, AvatarIcon, Name } from './ContactItem.styled'\nimport PropTypes from 'prop-types';\nimport { contactsItemSlice } from '../../redux';\nimport { useEffect} from \"react\";\nimport { sucsessDelete, errorDelete } from \"utils/notification\";\nimport { Modal } from 'components/Modal/Modal';\nimport { useModalState } from 'hooks/useModalState';\n\nexport const ContactItem = ({ name, number, id}) => { \n    const [deleteContact, { isLoading, isSuccess, isError }] = contactsItemSlice.useDeleteContactsMutation();\n    \n    useEffect(() => {\n        isSuccess && sucsessDelete();\n        isError && errorDelete();\n    }, [isError, isSuccess]);\n    const { modalOpen, openModal } = useModalState();\n    \n    return (\n        <>\n        <Item >\n            <AvatarIcon>{name.charAt(0).toUpperCase()}</AvatarIcon>\n            <Name primary={`${name}: ${number}`} />\n            <BtnDelete\n                disabled={isLoading}\n                onClick={() => { deleteContact(id) }}\n                variant=\"outlined\"\n                startIcon={<Delete />} />\n            <BtnEdit\n                onClick={openModal}\n                variant=\"outlined\"\n                startIcon={<Edit />} />\n        </Item> \n            {modalOpen&&<Modal onClose={openModal} isModalOpen={modalOpen} id={id}/>}\n        </>\n    )\n}\n\nContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n}","import { useState } from \"react\";\n\nexport const useModalState = () => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const openModal = () => {\n        setModalOpen(prevState => !prevState);\n    }\n  \n    return { modalOpen, openModal}\n};","import {PaperBoxContacts, SecondTitle } from './Contacts.styled'\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport List from '@mui/material/List';\nimport { useContacts } from 'hooks';\nimport Skeleton from '@mui/material/Skeleton';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\n\nexport const Contacts = () => {\n    const { filteredContacts, isLoading, isSuccess } = useContacts.useContacts();\n    return (\n        <PaperBoxContacts elevation={3}>\n            <SecondTitle>Contacts List</SecondTitle>\n            {(isLoading||!isSuccess)? Array.from(new Array(7)).map((_, index) =>\n                (<Skeleton key={index} width={360} height={50} />)) :\n                ( <>\n                    {filteredContacts.length > 0 ?\n                    (<List dense sx={{ width: '100%', maxWidth: 600, bgcolor: '#d6e4ee', maxHeight:350, overflow:'scroll' }}>\n                        {filteredContacts.map(({ id, name, number }) =>\n                            <ContactItem\n                                key={id}\n                                name={name}\n                                number={number}\n                                id={id}\n                            />\n                            )}</List>) :\n                        (<Stack sx={{ width: '100%' }} spacing={2}>\n                            <Alert severity=\"error\">There is No contact in your contacts list!</Alert>\n                        </Stack>)\n                    }\n                </> \n                )\n            }\n\n        </PaperBoxContacts>\n    )\n};\n","import { useGetContactsQuery } from 'redux/contactsItemSlice';\nimport {  contactsFilterSlice } from '../redux'\nimport { useSelector } from 'react-redux'\nimport { createSelector } from '@reduxjs/toolkit';\nimport * as React from 'react';\n\nexport const useContacts = () => {\n    const filter = useSelector(contactsFilterSlice.getFilterValue);\n    const selectFilteredContacts = React.useMemo(() => {\n        return createSelector([responce => responce.data, (_, filter) => filter],\n            (contacts, filter) => {\n                return (contacts?.filter(\n                    item => item.name\n                        .toLowerCase()\n                        .includes(filter.toLowerCase())) ?? []);\n            })\n    }, []);\n    return useGetContactsQuery(undefined, {\n        selectFromResult(result) {\n            return {\n                ...result,\n                filteredContacts: selectFilteredContacts(result, filter)\n            }\n        }\n    });    \n}","import { useChangeFilter } from 'hooks/useChangeFilter';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/contactsFilterSlice';\n\nexport const Filter = () => {\n   const filter =useSelector(getFilterValue)\n    const change = useChangeFilter();\n return (\n\n    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n        <SearchIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n         <TextField\n            id=\"input-with-sx\"\n            variant=\"standard\"\n            type=\"text\"\n            name=\"filter\" onChange={change} \n            value={filter}\n            label=\"Find contacts by name\"\n    />\n      </Box>\n\n\n  \n)}\n","import { useDispatch } from 'react-redux';\nimport { contactsFilterSlice } from \"../redux\";\n\nexport const useChangeFilter = () => {\n    const dispatch = useDispatch();\n    const handleChange = (e) => {\n        const inputValue = e.currentTarget.value;\n        dispatch(contactsFilterSlice.addFilter(inputValue))\n    };\n    return handleChange;\n};","import styled from \"@emotion/styled\";\n\nexport const Box = styled.div`\ndisplay: flex;\nalign-items:center;\nflex-direction:column;\nmargin-bottom:30px;\n`\n\nexport const Grid = styled.div`\ndisplay: flex;\nmargin-bottom:30px;\njustify-content:space-around;\n`\nexport const Title = styled.h1`\ncolor: hsl(210deg 8% 20%);\nmargin:0 0 15px 0;\npadding-top:20px;\n`","import { Forma } from \"../../components/Form/Form\";\nimport { Contacts } from '../../components/Contacts/Contacts'\nimport { Filter } from \"../../components/Filter/Filter\";\nimport { Grid, Title, Box } from \"./ContactsPage.styled\";\nimport Container from '@mui/material/Container';\nimport { useAddContactForm } from \"hooks/useAddContactForm\";\n\nexport default function ContactsPage () {\n    const { register, handleSubmit, errors, isLoading, onSubmit } = useAddContactForm();\n    return (\n        <Container>\n            <Box>\n                <Title>Your phonebook</Title>\n                <Filter />\n            </Box>\n            <Grid>\n                <Forma btnText='Add contact' register={register} handleSubmit={handleSubmit} errors={errors} onSubmit={onSubmit} isLoading={isLoading}/>\n                <Contacts />\n            </Grid>\n        </Container>\n    )\n}","import { useAddContactsMutation } from \"redux/contactsItemSlice\";\nimport { useGetContactsQuery } from \"redux/contactsItemSlice\";\nimport { useEffect } from \"react\";\nimport { notify, sucsessAdd,errorAdd } from \"utils/notification\";\nimport { useForm } from \"react-hook-form\";\nexport const useAddContactForm = () => {\n     const { register, reset, handleSubmit, formState: { errors } } = useForm({\n        defaultValues: {\n            name:'',\n            number:''\n        }\n    });\n    const [addContact, {isLoading, isSuccess, isError}] = useAddContactsMutation();\n    const { data: stateItems} = useGetContactsQuery();\n    \n    useEffect(() => {\n        isSuccess && sucsessAdd();\n        isError && errorAdd();\n    }, [isError, isSuccess]);\n\n  const onSubmit = async (values) => {\n    try {\n      const item = {\n        name: values.name,\n        number: values.number,\n      }\n      const dublicateName = stateItems.find(item => item.name.toLowerCase() === values.name.toLowerCase());\n      if (dublicateName) {\n        notify(item.name);\n        reset();\n        return\n      }\n      else {\n        await addContact(item);\n        reset();\n      }\n      \n    }\n    catch (error) {\n      error();\n    }\n  }\n  return {register, handleSubmit, errors, isLoading, onSubmit}\n}","import { toast } from 'react-toastify';\nexport const notify = (name) => toast.error(`Contact ${name} is already exist`, { autoClose: 1000 });\nexport const sucsessAdd = () => toast.info(`Contact add`, { autoClose: 1000 });\nexport const errorAdd = () => toast.error(\"Sorry your contact didn't save! Try again\", { autoClose: 1000 });\nexport const sucsessDelete = () => toast.info(`Contact delete!`, { autoClose: 1000 });\nexport const errorDelete = () => toast.error(\"Sorry your contact didn't DELETE! Try again\", { autoClose: 1000 });\nexport const sucsessEdit = () => toast.info(`Contact Edit SUCSESS!`, { autoClose: 1000 });\nexport const errorEdit = () => toast.error(\"Sorry! Try again\", { autoClose: 1000 });\nexport const errorRegistration =(message) => toast.error(message, { autoClose: 3000 });"],"names":["PaperForm","styled","Paper","InputField","Label","Error","BtnSubmitForm","Button","phoneRegExp","nameRegExp","Forma","btnText","register","handleSubmit","errors","onSubmit","contact","isLoading","autoComplete","htmlFor","id","type","defaultValue","name","required","minLength","value","message","pattern","placeholder","number","maxLength","disabled","variant","PaperBoxContacts","SecondTitle","Item","ListItem","AvatarIcon","Avatar","Name","ListItemText","Delete","DeleteIcon","Edit","EditIcon","BtnDelete","BtnEdit","Overlay","ModalBox","CloseBtn","modalRoot","document","querySelector","Modal","onClose","useGetContactsQuery","data","find","cont","useUpdateContactMutation","updateContact","isSuccess","isError","useEffect","sucsessEdit","errorEdit","fields","console","log","useForm","formState","useModalFormControl","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","event","currentTarget","target","Close","ContactItem","contactsItemSlice","useDeleteContactsMutation","deleteContact","sucsessDelete","errorDelete","useState","modalOpen","setModalOpen","openModal","prevState","useModalState","charAt","toUpperCase","primary","startIcon","isModalOpen","Contacts","filter","useSelector","contactsFilterSlice","selectFilteredContacts","React","createSelector","responce","_","contacts","item","toLowerCase","includes","undefined","selectFromResult","result","filteredContacts","useContacts","elevation","Array","from","map","index","Skeleton","width","height","length","List","dense","sx","maxWidth","bgcolor","maxHeight","overflow","Stack","spacing","Alert","severity","Filter","getFilterValue","change","dispatch","useDispatch","inputValue","useChangeFilter","Box","display","alignItems","Search","color","mr","my","TextField","onChange","label","Grid","Title","ContactsPage","defaultValues","reset","useAddContactsMutation","addContact","stateItems","sucsessAdd","errorAdd","values","dublicateName","notify","useAddContactForm","Container","toast","autoClose","errorRegistration"],"sourceRoot":""}